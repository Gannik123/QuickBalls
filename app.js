// ===== HTML Elements =====
const gameField = document.getElementById('gameField');
const scoreDisplay = document.getElementById('score');
const startBtn = document.getElementById('startBtn');
const totalScoreDisplay = document.getElementById('totalScore');
const timerDisplay = document.getElementById('timer');

// ===== Game Variables =====
let score = 0;
let timeLeft = 0;
let gameTimer;// –ø–æ—á–Ω–µ –∑–≤–æ—Ä–æ—Ç–Ω—ñ–π –≤—ñ–¥–ª—ñ–∫ —Ç–∞ –∑—É–ø–∏–Ω–∏—Ç—å –≥—Ä—É
let ballIntervals = [];
let totalScore = parseInt(localStorage.getItem('totalScore')) || 0; //–ö—Ä–æ–∫ 2 –¥—ñ—Å—Ç–∞—Ç–∏ –∑ LocalStorage 
totalScoreDisplay.textContent = `–í—Å—å–æ–≥–æ –Ω–∞–±—Ä–∞–Ω–æ: ${totalScore}ü™ô`; //–ö—Ä–æ–∫ 3 –≤—ñ–¥–æ–±—Ä–∞–∂–∞—î–º–æ –ø—Ä–∏ –æ–Ω–æ–≤–ª–µ–Ω–Ω—ñ —Å—Ç–æ—Ä—ñ–Ω–∫–∏

// ===== Difficulty Settings =====
  const difficultySettings = {
    easy: [
      { type: 'blue', interval: 1500, size: 80 }
    ],
  medium: [
    { type: 'blue', interval: 1500, size: 70 },
    { type: 'green', interval: 4000, size: 70 },
    { type: 'red', interval: 4500, size: 80 }
  ],  
  hard: [
    { type: 'blue', interval: 1300, size: 60 },
    { type: 'green', interval: 3500, size: 50 },
    { type: 'red', interval: 6500, size: 70 },
    { type: 'red', interval: 4500, size: 70 }
  ]
};
// part 2

let selectedDifficulty = 'easy'; // –ó–Ω–∞—á–µ–Ω–Ω—è –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º –∞–±–æ null

document.querySelectorAll('.difficulty-btn').forEach(button => {
  button.addEventListener('click', () => {
    selectedDifficulty = button.value;

    // –í–∏–¥—ñ–ª—è—î–º–æ –∞–∫—Ç–∏–≤–Ω—É –∫–Ω–æ–ø–∫—É
    document.querySelectorAll('.difficulty-btn').forEach(btn => {
      btn.classList.remove('selected');
    });
    button.classList.add('selected');

    console.log('–û–±—Ä–∞–Ω–∞ —Å–∫–ª–∞–¥–Ω—ñ—Å—Ç—å:', selectedDifficulty);
  });
});
// part 2 end

// ===== Create Ball =====
function createBall(type, size = 40) {
  const ball = document.createElement('div');
  ball.classList.add('ball', type);

// –ö—ñ–Ω–µ—Ü—å Part 3?  –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è —Å–∫—ñ–Ω–∞ –≤ –≥—Ä—ñ

const skinId = selectedSkins[type];
console.log(skinId) // —Ç—ñ —ñ–º–µ–Ω–∞ –∫—É–ª—å–æ–∫, —è–∫—ñ —É –Ω–∞—Å –æ–±—Ä–∞–Ω—ñ

const skin = skins[type].find(s => s.id === skinId);//.find() —à—É–∫–∞—î –ø–µ—Ä—à–∏–π –µ–ª–µ–º–µ–Ω—Ç, —â–æ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—î —É–º–æ–≤—ñ.
//s ‚Äî —Ü–µ –∫–æ–∂–µ–Ω –æ–±'—î–∫—Ç —É –º–∞—Å–∏–≤—ñ —Å–∫—ñ–Ω—ñ–≤ (–º–∞—î id, name, price, image)
//  s.id === skinId ‚Äî —É–º–æ–≤–∞: –∑–Ω–∞—Ö–æ–¥–∏–º–æ —Å–∫—ñ–Ω, —É —è–∫–æ–≥–æ id —Ç–∞–∫–∏–π —Å–∞–º–∏–π, —è–∫ –≤–∏–±—Ä–∞–Ω–∏–π –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–º

console.log(skin)
console.log(skin.img)

if (skin && skin.img) { // —è–∫—â–æ skin —ñ—Å–Ω—É—î —Ç–∞ –≤ –Ω—å–æ–º—É —î –∫–∞—Ä—Ç–∏–Ω–∫–∞, —Ç–æ:  
  ball.style.backgroundImage = `url('img/${skin.img}')`;
  ball.style.backgroundSize = 'cover';
  ball.style.backgroundRepeat = 'no-repeat';
}

// Part 3 end

  const maxX = gameField.clientWidth - size;
  const maxY = gameField.clientHeight - size;
  const x = Math.floor(Math.random() * maxX);
  const y = Math.floor(Math.random() * maxY);

  ball.style.left = `${x}px`;
  ball.style.top = `${y}px`;
  ball.style.width = `${size}px`;
  ball.style.height = `${size}px`;


  ball.addEventListener('click', () => {
       if (navigator.vibrate) {
      navigator.vibrate(100);// –≤–∏–∫–ª–∏–∫–∞—î–º–æ –≤—ñ–±—Ä–∞—Ü—ñ—é, —è–∫—â–æ –ø—ñ–¥—Ç—Ä–∏–º—É—î—Ç—å—Å—è
      console.log("–í—ñ–±—Ä–∞—Ü—ñ—è!");
    }
    ball.classList.add('shake');
setTimeout(() => ball.classList.remove('shake'), 300);
    if (type === 'blue') {
      if (selectedDifficulty === "hard") {
        score += 2
      } 
      score++;
    } else if (type === 'green') {
      if (selectedDifficulty === "hard") {
        score += 5
      } 
      score += 5;
      timeLeft += 1;
    } else if (type === 'red') {
      if (selectedDifficulty === "hard") {
        score = 0
        scoreDisplay.innerText = "–û—á–∫–∏:0"
        endGame(); // üëà –¢—É—Ç –∑–∞–∫—ñ–Ω—á—É—î—Ç—å—Å—è –≥—Ä–∞ –æ–¥—Ä–∞–∑—É –Ω–∞ hard –ø—Ä–∏ –∫–ª—ñ–∫—É –Ω–∞ —á–µ—Ä–≤–æ–Ω—É –∫—É–ª—å–∫—É
        return;
      } else {
        score -= 3;
        if (score < 0) score = 0;
      }
    }

    scoreDisplay.textContent = `–û—á–∫–∏: ${score}`;
    ball.remove();
  });

  
  gameField.appendChild(ball);

  setTimeout(() => {
    if (gameField.contains(ball)) ball.remove();
  }, 1500);
}

// ===== Start Game =====
function startGame() {
  document.querySelector(".difficulty-box").style.display = "none" // –ø—Ä–∏—Ö–æ–≤—É—î –≤–∏–±—ñ—Ä —Å–∫–ª–∞–¥–Ω–æ—Å—Ç—ñ
  score = 0;
  timeLeft = 20;
  scoreDisplay.textContent = '–û—á–∫–∏: 0';
  timerDisplay.textContent = `–ß–∞—Å: ${timeLeft}`;

  console.log(ballIntervals)
  ballIntervals.forEach(id => clearInterval(id));
  ballIntervals = [];
  clearInterval(gameTimer);   // –û—á–∏—â–∞—î–º–æ —ñ–Ω—Ç–µ—Ä–≤–∞–ª —ñ–≥—Ä–æ–≤–æ–≥–æ —Ç–∞–π–º–µ—Ä—É

  // part 2
  console.log(difficultySettings["hard"])// –¥–∏–≤–∏–º–æ—Å—å –Ω–∞ –∫–ª—é—á

  const settings = difficultySettings[selectedDifficulty]; // [] –±–æ difficulty- –∑–º—ñ–Ω–Ω–∞
  console.log(settings) // –º–∞—Å–∏–≤ —ñ–∑ –æ–±—Ä–∞–Ω–æ—é —Å–∫–ª–∞–¥–Ω—ñ—Å—Ç—é
 // part 2 ....
 
  settings.forEach(config => { // –∑ forEach –ü–µ—Ä–µ–±–∏—Ä–∞—î–º–æ –º–∞—Å–∏–≤ –æ–±'—î–∫—Ç—ñ–≤ –∑ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è–º–∏ (—Ç–∏–ø, —ñ–Ω—Ç–µ—Ä–≤–∞–ª, —Ä–æ–∑–º—ñ—Ä)
    const intervalId = setInterval(() => { // –î–ª—è –∫–æ–∂–Ω–æ–≥–æ —Ç–∏–ø—É –∑–∞–ø—É—Å–∫–∞—î–º–æ —Ç–∞–π–º–µ—Ä, —è–∫–∏–π –ø–µ—Ä—ñ–æ–¥–∏—á–Ω–æ –≤–∏–∫–ª–∏–∫–∞—î createBall
      createBall(config.type, config.size); // –°—Ç–≤–æ—Ä—é—î–º–æ –∫—É–ª—å–∫—É –∑ –≤–∫–∞–∑–∞–Ω–∏–º —Ç–∏–ø–æ–º (–∫–æ–ª—ñ—Ä) —ñ —Ä–æ–∑–º—ñ—Ä–æ–º
    }, config.interval); // –ß–∞—Å—Ç–æ—Ç–∞ –ø–æ—è–≤–∏ –∫—É–ª—å–∫–∏ –¥–ª—è —Ü—å–æ–≥–æ —Ç–∏–ø—É (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, 1500 –º—Å –¥–ª—è —Å–∏–Ω—å–æ—ó)
    
    ballIntervals.push(intervalId); // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ ID —ñ–Ω—Ç–µ—Ä–≤–∞–ª—É, —â–æ–± –ø–æ—Ç—ñ–º –º–æ–∂–Ω–∞ –±—É–ª–æ –π–æ–≥–æ –∑—É–ø–∏–Ω–∏—Ç–∏ –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ñ –≥—Ä–∏
    console.log(ballIntervals)
  });

  gameTimer = setInterval(() => {
    timeLeft--;
    timerDisplay.textContent = `–ß–∞—Å: ${timeLeft}`;
    
    if (timeLeft <= 0) {
      endGame();
    }

  }, 1000);
}
// End game
function endGame() {
    clearInterval(gameTimer);
    ballIntervals.forEach(id => clearInterval(id)); // –æ—á–∏—Å—Ç–∏–ª–∏ –ø–æ —Å—É—Ç—ñ intervalId –∫–æ–∂–Ω–æ—ó –∫—É–ª—å–∫–∏   
    ballIntervals = []; // –ø–æ—Ç—Ä—ñ–±–Ω–æ –¥–ª—è –æ—á–∏—â–µ–Ω–Ω—è –≤—Å—å–æ–≥–æ –≤–º—ñ—Å—Ç—É –ø–µ—Ä–µ–¥ –Ω–æ–≤–æ—é –≥—Ä–æ—é

    totalScore += score;
    totalScoreDisplay.textContent = `–í—Å—å–æ–≥–æ –Ω–∞–±—Ä–∞–Ω–æ: ${totalScore}ü™ô`;

    localStorage.setItem('totalScore', totalScore); // //–ö—Ä–æ–∫ 1 –¥–æ–¥–∞—Ç–∏ –¥–æ LocalStorage  
    alert(`–ì—Ä—É –∑–∞–≤–µ—Ä—à–µ–Ω–æ! –¢–≤—ñ–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç: ${score} –æ—á–æ–∫.`);
    document.querySelector(".difficulty-box").style.display = "block" // –ø–æ–≤–µ—Ä—Ç–∞—î –≤–∏–±—ñ—Ä —Å–∫–ª–∞–¥–Ω–æ—Å—Ç—ñ
  }
startBtn.addEventListener('click', startGame);

// Part 3

// ===== –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Å–∫—ñ–Ω—ñ–≤ =====
const skins = {
  blue: [
    { id: 'classic', name: '–ö–ª–∞—Å–∏—á–Ω–∏–π', price: 0, img: 'blue-classic.png' },
    { id: 'emoji-blue', name: 'emoji-blue', price: 20, img: 'emoji-blue.png' },
    { id: 'capybara', name: 'capybara', price: 400, img: 'capy.gif' },
  ],
  green: [
    { id: 'classic', name: '–ö–ª–∞—Å–∏—á–Ω–∏–π', price: 0, img: 'green-classic.png' },
    { id: 'emoji-cool-dude', name: 'emoji-cool-dude', price: 25, img: 'emoji-cool-dude.webp' },
    { id: 'pingvin', name: 'pingvin', price: 200, img: 'pingvin.gif' }
  ],
  red: [
    { id: 'classic', name: '–ö–ª–∞—Å–∏—á–Ω–∏–π', price: 0, img: 'red-classic.png' },
    { id: 'emoji-angree', name: 'emoji-angree', price: 40, img: 'emoji-angree.png' },
    { id: 'bomb', name: 'bomb', price: 500, img: 'bomb-1.webp' },
    { id: 'poop', name: 'poop', price: 100, img: 'poop.gif' }
  ]
};

// –û–∫—Ä–µ–º–∞ —Ñ—É–Ω–∫—Ü—ñ—è –¥–ª—è –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –æ–±–æ—Ö –æ–±‚Äô—î–∫—Ç—ñ–≤ –≤ LocalStorage –ø—ñ—Å–ª—è –±—É–¥—å-—è–∫–æ—ó –∑–º—ñ–Ω–∏ (–∫—É–ø—ñ–≤–ª—è –∞–±–æ –≤–∏–±—ñ—Ä —Å–∫—ñ–Ω–∞).
function saveShopData() {
  localStorage.setItem('ownedSkins', JSON.stringify(ownedSkins));
  localStorage.setItem('selectedSkins', JSON.stringify(selectedSkins));
}

// ===== –î—ñ—Å—Ç–∞—î–º–æ –ø—Ä–∏–¥–±–∞–Ω—ñ —Å–∫—ñ–Ω–∏ —Ç–∞ –∞–∫—Ç–∏–≤–Ω–∏–π —Å–∫—ñ–Ω =====
const ownedSkins = JSON.parse(localStorage.getItem('ownedSkins')) || { 
  blue: ['classic'], //  || - –Ø–∫—â–æ LocalStorage –ø–æ—Ä–æ–∂–Ω—ñ–π ‚Äî –¥–∞—î–º–æ –∫–ª–∞—Å–∏—á–Ω–∏–π –±–µ–∑–∫–æ—à—Ç–æ–≤–Ω–∏–π —Å–∫—ñ–Ω –∫–æ–∂–Ω–æ–º—É –∫–æ–ª—å–æ—Ä—É.
  green: ['classic'],
  red: ['classic']
}; // –¥—ñ—Å—Ç–∞—î —É—Å—ñ –∑–±–µ—Ä–µ–∂–µ–Ω—ñ –ø—Ä–∏–¥–±–∞–Ω—ñ —Å–∫—ñ–Ω–∏, —â–æ–± –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –º—ñ–≥ —ó—Ö –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ –ø—Ä–∏ –Ω–∞—Å—Ç—É–ø–Ω–æ–º—É –∑–∞—Ö–æ–¥—ñ –≤ –≥—Ä—É.
console.warn(ownedSkins)

const selectedSkins = JSON.parse(localStorage.getItem('selectedSkins')) || {
  blue: 'classic',
  green: 'classic',
  red: 'classic'
}; //–í–∫–∞–∑—É—î, —è–∫–∏–π —Å–∫—ñ–Ω –∑–∞—Ä–∞–∑ –≤–∏–±—Ä–∞–Ω–∏–π –¥–ª—è –∫–æ–∂–Ω–æ–≥–æ –∫–æ–ª—å–æ—Ä—É.
console.warn(selectedSkins)

// ===== –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –≤—ñ–¥–∫—Ä–∏—Ç—Ç—è –º–∞–≥–∞–∑–∏–Ω—É =====

const shopArea = document.querySelector("#shopArea");
const shopBtn = document.querySelector("#shopBtn");
const closeShop = document.querySelector("#closeShop");

shopBtn.onclick = function () {
  shopArea.classList.add("active");
};

closeShop.onclick = function () {
  shopArea.classList.remove("active");
};



// ===== –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è  –í–ú–Ü–°–¢–£ –º–∞–≥–∞–∑–∏–Ω–∞ =====
function renderShop() {

  const shopContainer = document.getElementById('skinList');
  shopContainer.innerHTML = '';

  for (let type in skins) {
    const title = document.createElement('h3');
    title.textContent = `${type.toUpperCase()} –°–∫—ñ–Ω–∏`;
    shopContainer.appendChild(title);

    skins[type].forEach(skin => { // skin- –∫–æ–∂–µ–Ω —Å–∫—ñ–Ω
     // console.log(skin)
      const div = document.createElement('div');
      div.className = 'skin-item';

      const imgShop = document.createElement('img');
     
      imgShop.src = `img/${skin.img}`;
      div.appendChild(imgShop);

      const label = document.createElement('div');
      label.innerHTML = `<p>${skin.name}</p><p>${skin.price}ü™ô</p>`;
      div.appendChild(label);

      const button = document.createElement('button');
      // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞ –∫—É–ø–ª–µ–Ω–∏–π —Å–∫—ñ–Ω:
      if (ownedSkins[type].includes(skin.id)) { // –Ø–∫—â–æ —Å–∫—ñ–Ω –≤–∂–µ –∫—É–ø–ª–µ–Ω–∏–π:
        console.log(ownedSkins[type])
        console.log(skin.id)

        if (selectedSkins[type] === skin.id) {
          button.textContent = '–û–±—Ä–∞–Ω–æ';
          button.disabled = true;

          button.style.cssText =`
              background-color: #caffd4;
              border: 2px solid #aee6b8;
              color: #3d6544;
          `
      } else {
          button.textContent = '–û–±—Ä–∞—Ç–∏';
          button.disabled = false;
          button.style.cssText =`
            background-color: #ffeaa7;
            border: 2px solid #dfc980;
            color: #8d7528;
      `
      }
// –ü—Ä–∏ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—ñ ‚Üí –∑–±–µ—Ä—ñ–≥–∞—î–º–æ –≤–∏–±—Ä–∞–Ω–∏–π —Å–∫—ñ–Ω, –æ–Ω–æ–≤–ª—é—î–º–æ —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å.
        button.onclick = () => {
          selectedSkins[type] = skin.id;
          saveShopData();
          renderShop();
        };
      }
      // –Ø–∫—â–æ —Å–∫—ñ–Ω —â–µ –Ω–µ –∫—É–ø–ª–µ–Ω–∏–π:
      else {
        button.textContent = `–ö—É–ø–∏—Ç–∏ –∑–∞ ${skin.price}ü™ô`;
        button.onclick = () => {
          if (totalScore >= skin.price) {
            totalScore -= skin.price;
            totalScoreDisplay.textContent = `–í—Å—å–æ–≥–æ –Ω–∞–±—Ä–∞–Ω–æ: ${totalScore}ü™ô`;
            localStorage.setItem('totalScore', totalScore);// –ø—ñ—Å–ª—è –∫—É–ø—ñ–≤–ª—ñ –æ–Ω–æ–≤–ª—é—î–º–æ

            ownedSkins[type].push(skin.id);
            selectedSkins[type] = skin.id;
            saveShopData();
            renderShop();
          } else {
            alert("–ù–µ–¥–æ—Å—Ç–∞—Ç–Ω—å–æ –æ—á–æ–∫!");
          }
        };
      }

      div.appendChild(button);
      shopContainer.appendChild(div);
    });
  }// –∫—ñ–Ω–µ—Ü—å —Ü–∏–∫–ª—É
}


 renderShop();
